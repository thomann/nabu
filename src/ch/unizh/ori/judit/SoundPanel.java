/*
 * SoundPanel.java
 *
 * Created on 10. November 2003, 15:47
 */

package ch.unizh.ori.judit;

import java.io.*;
import javax.sound.sampled.*;
import javax.swing.*;

/**
 *
 * @author  pht
 */
public class SoundPanel extends javax.swing.JPanel {
    
    /** Creates new form SoundPanel */
    public SoundPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        startB = new javax.swing.JButton();
        loopB = new javax.swing.JButton();
        playMarkB = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        curL = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        markL = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lengthL = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        fileTF = new javax.swing.JTextField();
        openSoundFile = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        writeMarkB = new javax.swing.JButton();
        playSelected = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        startB.setMnemonic('s');
        startB.setText("Start");
        startB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBActionPerformed(evt);
            }
        });

        jPanel1.add(startB);

        loopB.setMnemonic('l');
        loopB.setText("Loop");
        loopB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loopBActionPerformed(evt);
            }
        });

        jPanel1.add(loopB);

        playMarkB.setMnemonic('m');
        playMarkB.setText("Play Mark");
        playMarkB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playMarkBActionPerformed(evt);
            }
        });

        jPanel1.add(playMarkB);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(jPanel1, gridBagConstraints);

        curL.setBackground(new java.awt.Color(0, 0, 0));
        curL.setForeground(new java.awt.Color(51, 255, 51));
        curL.setText("0:43:02");
        curL.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 255)));
        curL.setOpaque(true);
        jPanel3.add(curL);

        jLabel2.setText("Mark");
        jPanel3.add(jLabel2);

        markL.setBackground(new java.awt.Color(0, 0, 0));
        markL.setForeground(new java.awt.Color(51, 255, 51));
        markL.setText("0:43:02");
        markL.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 255)));
        markL.setOpaque(true);
        jPanel3.add(markL);

        jLabel1.setText("length:");
        jPanel3.add(jLabel1);

        lengthL.setBackground(new java.awt.Color(0, 0, 0));
        lengthL.setForeground(new java.awt.Color(51, 255, 51));
        lengthL.setText("0:43:02");
        lengthL.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 255)));
        lengthL.setOpaque(true);
        jPanel3.add(lengthL);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(jPanel3, gridBagConstraints);

        jPanel2.setLayout(new java.awt.BorderLayout());

        fileTF.setEditable(false);
        jPanel2.add(fileTF, java.awt.BorderLayout.CENTER);

        openSoundFile.setText("Open Soundfile");
        openSoundFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openSoundFileActionPerformed(evt);
            }
        });

        jPanel2.add(openSoundFile, java.awt.BorderLayout.EAST);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel2, gridBagConstraints);

        writeMarkB.setMnemonic('w');
        writeMarkB.setText("Write mark");
        writeMarkB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeMarkBActionPerformed(evt);
            }
        });

        jPanel4.add(writeMarkB);

        playSelected.setMnemonic('s');
        playSelected.setText("Play selected.");
        playSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playSelectedActionPerformed(evt);
            }
        });

        jPanel4.add(playSelected);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel4, gridBagConstraints);

    }//GEN-END:initComponents

    private void playMarkBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playMarkBActionPerformed
        playMark();
    }//GEN-LAST:event_playMarkBActionPerformed

    private void playSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playSelectedActionPerformed
        playSelected();
    }//GEN-LAST:event_playSelectedActionPerformed

    private void openSoundFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openSoundFileActionPerformed
        openSoundFile();
    }//GEN-LAST:event_openSoundFileActionPerformed

    private void writeMarkBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeMarkBActionPerformed
        writeMark();
    }//GEN-LAST:event_writeMarkBActionPerformed

    private void loopBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loopBActionPerformed
        loop();
    }//GEN-LAST:event_loopBActionPerformed

    private void startBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBActionPerformed
        start();
    }//GEN-LAST:event_startBActionPerformed
    
    public void writeMark(){
        long l = clip.getMicrosecondPosition();
        System.out.println("%% mark: "+l+" : "+printTime(l/1000));
    }
    
    public void loop(){
        /*clip.setLoopPoints(mark,cur);
        clip.loop(0);*/
    }
    
    public void start(){
        setMark(clip.getMicrosecondPosition());
        play(cur);
    }
    
    public void playMark(){
        play(mark);
    }
    
    public void playSelected(){
    }
    
    public void play(long l){
        if (startB.getText().startsWith("Play")) {
            clip.setMicrosecondPosition(l);
            clip.start();
            //samplingGraph.start();
            startB.setText("Stop");
        } else {
            setCur(clip.getMicrosecondPosition());
            clip.stop();
            //samplingGraph.stop();
            startB.setText("Play");
        }
    }
    
    public void openSoundFile(){
        try {
            File file = new File(System.getProperty("user.dir"));
            JFileChooser fc = new JFileChooser(file);
            fc.setFileFilter(new javax.swing.filechooser.FileFilter () {
                public boolean accept(File f) {
                    if (f.isDirectory()) {
                        return true;
                    }
                    String name = f.getName();
                    if (name.endsWith(".au") || name.endsWith(".wav") || name.endsWith(".aiff") || name.endsWith(".aif")) {
                        return true;
                    }
                    return false;
                }
                public String getDescription() {
                    return ".au, .wav, .aif";
                }
            });

            if (fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
                createAudioInputStream(fc.getSelectedFile());
                fileTF.setText(fc.getSelectedFile().toString());
            }
        } catch (SecurityException ex) { 
            ex.printStackTrace();
        } catch (Exception ex) { 
            ex.printStackTrace();
        }
    }
    
    public void createAudioInputStream(File file) {
        if (file != null && file.isFile()) {
            try {
                this.file = file;
                errStr = null;
                audioInputStream = AudioSystem.getAudioInputStream(file);
                AudioFormat format = audioInputStream.getFormat();
                DataLine.Info info = new DataLine.Info(
                    Clip.class, format,
                    ((int)audioInputStream.getFrameLength()*format.getFrameSize())
                );
                clip = (Clip) AudioSystem.getLine(info);
                startB.setEnabled(true);
                fileName = file.getName();
                long milliseconds = (long)((audioInputStream.getFrameLength() * 1000) / audioInputStream.getFormat().getFrameRate());
                setDur(milliseconds);
                setCur(0);
                setMark(0);
                //samplingGraph.createWaveForm(null);
            } catch (Exception ex) { 
                System.err.println(ex.toString());
            }
        } else {
            System.err.println("Audio file required.");
        }
    }
    
    public void setDur(long l){
        duration = l;
        lengthL.setText(printTime(l/1000));
    }
    
    public void setCur(long l){
        cur = l;
        curL.setText(printTime(l));
    }
    
    public void setMark(long l){
        mark = l;
        markL.setText(printTime(l));
    }
    
    public static String printTime(long l){
        l /= 1000;
        return (l/3660) +":"+ ((l%3660)/60) +":"+ (l%60);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton playMarkB;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton loopB;
    private javax.swing.JTextField fileTF;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lengthL;
    private javax.swing.JButton startB;
    private javax.swing.JButton openSoundFile;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel markL;
    private javax.swing.JLabel curL;
    private javax.swing.JButton playSelected;
    private javax.swing.JButton writeMarkB;
    // End of variables declaration//GEN-END:variables
    
    private File file;
    private String fileName;
    
    private AudioInputStream audioInputStream;
    private Clip clip;
    
    private String errStr;
    private long duration = 0;
    private long mark;
    private long cur;
    
}
